@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject HttpClient Http
@inject NavigationManager Navigation

@{
    if (LoggedIn)
    {
        <div style="padding-left:30px">
            <h3 style="color:green;">Api logged in</h3>
            <button class="nav-link btn btn-link" @onclick="Logout">Log out</button>
        </div>

    }
    else
    {
        <div style="padding-left: 30px">
            <h3 style="color:red;">Api not logged in</h3>
            <button class="nav-link btn btn-link" @onclick="Login">Log In</button>
        </div>

    }
}


@code{
    bool LoggedIn { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await IsLoggedIn();
    }

    private async Task Logout(MouseEventArgs args)
    {
        await Http.GetAsync("ApiLogin/Logout");
        LoggedIn = false;
        StateHasChanged();
    }

    private async Task Login(MouseEventArgs args)
    {
        var response = await Http.GetAsync("ApiLogin/Login");
        Navigation.NavigateTo(await response.Content.ReadAsStringAsync());
    }

    private async Task IsLoggedIn()
    {
        var response = await Http.GetAsync("ApiLogin/IsLoggedOn");
        var booly = await response.Content.ReadAsStringAsync();
        if (booly == "true")
        {
            LoggedIn = true;
            StateHasChanged();
        }
        else
        {
            LoggedIn = false;
            StateHasChanged();
        }
    }
}
